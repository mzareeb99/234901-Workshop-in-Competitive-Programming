Each step s out of the S steps is a linear operation, that for every number x_i_s, (i in [N]) we calculate:
x_i_s = 1 * x_i_s-1 + L * x_i-1_s-1 + R *x_i+1_s-1 .
we can write the operation as a matrix multiplication, A*x, where A is the circulant matrix [1, R, 0, ..., 0, L]
of size N giving the desired result.
Because applying this operation S times just results in S matrix multiplication, we get that the final result is (A^s)*x.
the algorithm is :
calculate A^s using the fast exponent alogirthm and calculate one final matrix multiplication. 
using just one vector to represent each matrix , which made everything much harder.
This implementation is of complexity O(N^2 * log(S)).
