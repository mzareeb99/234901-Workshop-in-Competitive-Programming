First, we calculate all the prime numbers up to 14,000,
as this is the biggest number we will encounter when adding
the input numbers together.
and then, for each subset of {S1, ..., SN} we calculate the number
of distinct prime factors of this subset number's sum and save those
values in vector.
Now use DP: create a vector of size 2^N:
The way to calculate each cell is:
A[n] = max over all subsets of n (subset revenue + A[n-subset]).
we return A[(2^N)-1] which is the max revenue of all input numbers.
Time complexity:
Total - O((2^N) * sqrt(14000))
