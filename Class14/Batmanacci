#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>
#include <numeric>
#include <iomanip>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<vll> vvll;
typedef vector<vull> vvull;
typedef pair<int, int> pii;
typedef pii ii;
typedef pair<int, ii> iii;
typedef vector<pii> vii;
typedef priority_queue<int> max_iheap;
typedef priority_queue<ll> max_llheap;
typedef priority_queue<ull> max_ullheap;
typedef priority_queue<int, vi, greater<int>> min_iheap;
typedef priority_queue<int, vll, greater<ll>> min_llheap;
typedef priority_queue<int, vull, greater<ull>> min_ullheap;
typedef vector< vector<int> > vvi; // unweighted graph
typedef vector< vector< pair<int,int> > > vvii; // weighted graph
#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)

int min(int a,int b) {return a<b ? a :b;}
int main() {
    long long N,K;
    cin>> N>>K;
    vector<long long> vec(91,0);
    vec[0]=0,vec[1]=1;
    vec[2] =1, vec[3] = 2;
    int  i = 4;
    for (; i < 91; i++) {
        vec[i] = vec[i-1]+vec[i-2];
    }
    i = min(90,N);
    while(true) {
        if(i==1) {
            cout << "N" << endl;
            return 0;
        }
        if(i==2) {
            cout << "A" << endl;
            return 0;
        }
        if(K > vec[i-2]){
            i-=1;
            K -= vec[i-1];
        }else {
            i-=2;
        }
    }
}
