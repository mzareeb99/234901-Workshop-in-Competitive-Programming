#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <climits>
#include <string>
#include <vector>
#include <numeric>
#include <iomanip>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<ull> vull;
typedef vector<vll> vvll;
typedef vector<vull> vvull;
typedef pair<int, int> pii;
typedef pii ii;
typedef pair<int, ii> iii;
typedef vector<pii> vii;
typedef priority_queue<int> max_iheap;
typedef priority_queue<ll> max_llheap;
typedef priority_queue<ull> max_ullheap;
typedef priority_queue<int, vi, greater<int>> min_iheap;
typedef priority_queue<int, vll, greater<ll>> min_llheap;
typedef priority_queue<int, vull, greater<ull>> min_ullheap;
typedef vector< vector<int> > vvi; // unweighted graph
typedef vector< vector< pair<int,int> > > vvii; // weighted graph
#define fastIO ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL)

int minimum(vector<vector<vector<int>>>& dp, int cokes, int n1, int n5, int n10 , int cokeBought=0){
    if(dp[cokeBought][n5][n10] != -1)
        return dp[cokeBought][n5][n10];
    if(cokes == cokeBought) {
        dp[cokes][n5][n10]=0;
        return 0;
    }
    int result=INT_MAX;
    if(n10 >= 1) {
        result = min(result, 1+minimum(dp, cokes, n1 + 2, n5, n10 - 1, cokeBought + 1));
    }
     if(n5 >1){
        result=min(result,2+minimum(dp, cokes, n1 + 2, n5 - 2, n10, cokeBought + 1));
    }
     if(n10 >= 1 && n1 >= 3){
        result=min(result,4+minimum(dp, cokes, n1 - 3, n5 + 1, n10 - 1, cokeBought + 1));
    }
     if(n1 >= 8){
        result=min(result,8+ minimum(dp, cokes, n1 - 8, n5, n10, cokeBought + 1));
    }
     if(n1 >= 3 && n5 >= 1){
        result=min(result,4+ minimum(dp, cokes, n1 - 3, n5 - 1, n10, cokeBought + 1));
    }
    dp[cokeBought][n5][n10]=result;
    return result;
}

int main() {
    int test;
    cin>>test;
    while(test--){
        int cokes,n1,n5,n10;
        cin>>cokes>>n1>>n5>>n10;
        vector<vector<vector<int>>> dp(cokes+1, vvi(300,vi(n10+1,-1)));
        cout<<minimum(dp,cokes,n1,n5,n10)<<endl;
    }

    return 0;
}